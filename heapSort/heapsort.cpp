#include<iostream>
#include<vector>
#include"./priority_queue.h"
using std::vector;

int main()
{
    vector<double>originVec({3,1,4,1,5,9,2,6,5,3});
    vector<double>sorted;
    auto Q = Priority_Queue(originVec);
    std::cout<<"Priority_Queue:"<<std::endl;
    Q.displayQ();
    std::cout<<"-----------------"<<std::endl;
    while(! Q.isEmpty())
    {
        sorted.push_back(Q.extractMin());
    }
    for(auto v : sorted)
        std::cout<<v<<std::endl;

    auto Qinsert = Priority_Queue();
    for(auto val : originVec)
        Qinsert.insert(val);
    std::cout<<"----------- queue generated by inserting ------"<<std::endl;
    Qinsert.displayQ();
    Qinsert.updateKey(2,0.5);
    std::cout<<"test updateKey"<<std::endl;
    Qinsert.displayQ();
    return 0;
}
